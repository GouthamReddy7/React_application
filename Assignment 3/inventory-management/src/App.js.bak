import React, { useState, useEffect } from 'react';
import InventoryList from './Forms/InventoryList';
import InventoryForm from './Forms/InventoryForm';
import InventoryUpdateForm from './Forms/InventoryUpdateForm';
import axios from 'axios';
import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';
import NewPage from './NewPage'; // Import the new page component

const App = () => {
  const [showModal, setShowModal] = useState(false); // State to manage modal visibility
  const [showUpdateForm, setShowUpdateForm] = useState(false);
  const [refreshKey, setRefreshKey] = useState(0); // State to trigger component re-render

  const handleAddClick = () => {
    setShowModal(true); // Open modal when "Add Item" button is clicked
    setShowUpdateForm(false);
  };

  const handleCloseModal = () => {
    setShowModal(false); // Close modal when the modal's close button is clicked
  };

  const handleAddItem = () => {
    setShowModal(false); // Close modal after adding an item
    // Trigger a re-render by updating the refreshKey
    setRefreshKey(prevKey => prevKey + 1);
  };

  useEffect(() => {
    // Fetch inventory data after each successful addition
    const fetchData = async () => {
      try {
        const response = await axios.get('http://52.91.136.13:5000/inventory');
        console.log(response)
      } catch (error) {
        console.error('Error fetching inventory items:', error);
      }
    };

    fetchData();
  }, [refreshKey]); // This effect runs whenever refreshKey changes

  return (
    <Router>
      <div className="app-container">
        <h1>Inventory Management</h1>
        <div className="buttons-container">
          <button onClick={handleAddClick} className="button yellow">Add Item</button>
        </div>
        <Switch>
          <Route exact path="/">
            <InventoryList key={refreshKey} /> {/* Pass refreshKey as key to force re-render */}
          </Route>
          <Route path="/newpage">
            <NewPage />
          </Route>
        </Switch>
        {/* Render modal and InventoryForm when showModal is true */}
        {showModal && (
          <div className="modal">
            <div className="modal-content">
              <span className="close" onClick={handleCloseModal}>&times;</span> {/* Close button */}
              <InventoryForm onAddItem={handleAddItem} />
            </div>
          </div>
        )}
        {showUpdateForm && <InventoryUpdateForm />}
      </div>
    </Router>
  );
};

export default App;
